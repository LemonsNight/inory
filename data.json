{
    "data":[
        {
            "id":"0",
            "title":"日常吐槽",
            "time":"2020-7-5",
            "content":"过几天弄个音乐播放器好了~，我看看应该怎么弄，网易的nodeJS需要服务器，估计不太行，看看有没有什么办法弄个在线的,没有服务器还是挺多东西弄不了的，先把界面做好吧,网站还在建设中，所以功能不方便，不过文章是可以正常发布了。。。",
            "imgurl":"https://uploadstatic.mihoyo.com/contentweb/20200709/2020070912220829234.png",
            "author":"inory"
        },
        {
            "title": "wangEditor",
            "content": "<p>由于莫得后台服务器，所以打算直接弄个编辑器，然后生成txt或者json文件来复制，这样就方便挺多了，后期可能还会优化，个人推荐直接生成json文件，方便复制！！！哈哈哈。</p><p>贴上代码</p><pre><p>&lt;template&gt;<br>    &lt;div id=\"editor\"&gt;<br>        <br>       &lt;div ref=\"editorElem\"&gt;&lt;/div&gt;<br>       &lt;br&gt;<br>        &lt;div&gt;        <br>           &lt;input type=\"text\" ref=\"title\" placeholder=\"标题\"&gt;<br>           &lt;input type=\"text\" ref=\"time\" placeholder=\"时间\"&gt;<br>           &lt;input type=\"text\" ref=\"author\" placeholder=\"作者\"&gt;<br>           &lt;input type=\"text\" ref=\"id\" placeholder=\"ID\"&gt;<br>           &lt;input type=\"file\" ref=\"fileE\" multiple=\"multiple\" accept=\".png,.jpeg,.jpg\"&gt;<br>           &lt;button @click=\"jsonevent\"&gt;GO&lt;/button&gt;<br>       &lt;/div&gt;<br>       <br>    &lt;/div&gt;<br>&lt;/template&gt;<br>&lt;script&gt;<br>import E from \"wangeditor\";<br>export default {<br>    name:\"Editor\",<br>    data() {<br>        return {<br>            editorval:{<br>                title:\"\",   <br>                content:\"\", <br>                author:\"\",<br>                timer:\"\",<br>                id:\"\",<br>                imgurl:\"\"<br>            } <br>        }<br>    },<br>    mounted() {<br>        this.editor = new E(this.$refs.editorElem);// vue挂载完后,实例化对象绑定div<br>        this.editor.create();//创建编辑器<br>    },<br>    methods: {<br>        jsonevent(){<br>            this.editorval = {<br>                title:this.$refs.title.value,<br>                content:this.editor.$textElem[0].innerHTML,<br>                author:this.$refs.author.value||`inory`,<br>                time:this.$refs.time.value || this.gettime,<br>                id:this.$refs.id.value,<br>                imgurl:`data/${this.$refs.fileE.files[0].name}`<br>            }<br>            this.fsenvet()<br>        },<br>        fsenvet(){<br>            console.log()<br>            let FileSaver = require('./js/FileSaver.min.js'); <br>            let content = JSON.stringify(this.editorval);<br>            let blob = new Blob([content ], {type: \"text/plain;charset=utf-8\"}); <br>            console.log(FileSaver,content,blob)<br>            FileSaver.saveAs(blob, \"inory.json\");<br>        }<br>    },<br>    computed: {<br>        gettime: function(){<br>            let getnewtime = new Date();<br>            let gettimer  = `${getnewtime.getFullYear()}-${getnewtime.getMonth()+1}-${getnewtime.getDate()}`<br>            return gettimer<br>        }<br>    },<br>}<br>&lt;/script&gt;</p></pre><p>主要就是引入FileSaver.js</p><p>链接：https://www.kancloud.cn/wangfupeng/wangeditor3/332599​&nbsp;</p>",
            "author": "inory",
            "time": "2020-07-07",
            "id": "1",
            "imgurl": "https://uploadstatic.mihoyo.com/contentweb/20191115/2019111515510150417.jpg"
        },
        {
            "title": "关我播放器的制作",
            "content": "<p>最近仿照网易音乐播放器做了个界面，因为vue是数据驱动，所以我尽可能的没去用JS的原生去操作DOM，不过应该是基本都没用到，播放器还有很多功能没做，只是写了个界面和做了播放的基础功能（随机播放顺序播放这些），用了axios去请求的数据和audio的一些自带的属性，过几天完善下歌词滚动，然后整个迷你播放器，符合常规，其他功能日后完善，目前的想法是，把VUE的所有能用的东西全部写到做到博客里面，也就是DEMO=。=</p><p>播放器的使用方法就是点击右上角的按钮切换显示。</p><p>还有一点就是谷歌的浏览器不支持自带播放的功能，这是谷歌自己所设置的东西，原因是怕用户点开网站，突然冒出声音，吓到用户，所以做了人性化设置</p><p>其他浏览器还是可以的。</p>",
            "author": "inory",
            "time": "2020-7-13",
            "id": "2",
            "imgurl": "https://uploadstatic.mihoyo.com/contentweb/20191129/2019112916313715808.jpg"
          }
    ]
}